{"version":3,"sources":["components/header/Header.tsx","context/file/FileContext.tsx","components/file-chooser/FileChooser.tsx","components/grid/Grid.tsx","hooks/useD3.tsx","components/control-panel/ControlPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","className","title","ImageFileContext","React","createContext","imageFile","undefined","setImageFile","console","log","useFileImage","useContext","FileChooser","type","name","id","onChange","event","persist","target","files","length","file","URL","createObjectURL","img","Image","src","onload","loaded","height","width","config","grid","pixels","opacity","setConfig","accept","htmlFor","Grid","ref","renderChartFn","dependencies","useRef","useEffect","d3","current","useD3","svg","margin","INNER_WIDTH","INNER_HEIGHT","xDomain","yDomain","x","domain","range","y","xAxisGrid","tickSize","ticks","yAxisGrid","showTooltip","positionX","positionY","label","value","tooltip","text","style","hideTooltip","transition","duration","selectAll","remove","attr","append","xAxis","color","call","on","xValue","pageX","pageY","yValue","ControlPanel","min","max","Object","assign","parseInt","updateConfig","step","parseFloat","App","useState","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7b5106a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\n\r\ninterface HeaderProps {\r\n    title: string;\r\n}\r\n\r\nconst Header = (props: HeaderProps) => {\r\n    return (\r\n        <header className=\"Header\">\r\n            {props.title}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { createContext, useContext } from 'react';\r\n\r\nexport interface ImageFile {\r\n    file?: string\r\n    loaded: boolean\r\n    height: number\r\n    width: number \r\n}\r\n\r\nexport type ImageFileContext = {\r\n    imageFile?: ImageFile;\r\n    setImageFile: (imageFile: ImageFile) => void;\r\n}\r\n\r\nexport const ImageFileContext = React.createContext<ImageFileContext>({imageFile: undefined, setImageFile: imageFile => console.log('No image file')})\r\nexport const useFileImage = () => useContext(ImageFileContext);","import React, { ChangeEvent, useState } from 'react'\r\nimport { useFileImage } from '../../context/file/FileContext';\r\nimport './FileChooser.scss'\r\n\r\nconst FileChooser = (props: any) => {\r\n\r\n    const { imageFile, setImageFile } = useFileImage();\r\n\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        event.persist();\r\n        if(event.target.files && event.target.files?.length > 0) {\r\n            let file = URL.createObjectURL(event.target.files[0]);\r\n            var img = new Image();\r\n\r\n            img.src = file;\r\n            img.onload = () => {\r\n                setImageFile({file: file, loaded: true, height: img.height, width: img.width});\r\n                let config = {\r\n                        grid:{\r\n                            height: img.height, \r\n                            width: img.width, \r\n                            pixels: props.config.grid.pixels,\r\n                            opacity: props.config.grid.opacity\r\n                        }};\r\n                props.setConfig(config);\r\n            }  \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" className=\"inputFile\" name=\"imageChooser\" id=\"imageChooser\" onChange={onChange} accept=\"image/png, image/jpeg\"/>\r\n            <label htmlFor=\"imageChooser\">Choose image</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileChooser\r\n","import * as d3 from 'd3';\r\nimport React from 'react'\r\nimport { useFileImage } from '../../context/file/FileContext';\r\nimport { useD3 } from '../../hooks/useD3';\r\nimport './Grid.scss';\r\n\r\nconst Grid = (props: any) => {\r\n\r\n  const { imageFile } = useFileImage();\r\n\r\n  const ref = useD3(\r\n      (svg) => {\r\n\r\n        const height = props.config.grid.height + 100;\r\n        const width = props.config.grid.width + 100;\r\n        const margin = { top: 50, right: 50, bottom: 50, left: 50 };\r\n        const INNER_WIDTH  = width - margin.left - margin.right;\r\n        const INNER_HEIGHT = height - margin.top - margin.bottom;\r\n\r\n        const xDomain = (INNER_WIDTH / props.config.grid.pixels);\r\n        const yDomain = (INNER_HEIGHT / props.config.grid.pixels);\r\n        const x         = d3.scaleLinear().domain([0, xDomain]).range([0, INNER_WIDTH]);\r\n        const y         = d3.scaleLinear().domain([0, yDomain]).range([INNER_HEIGHT, 0]);\r\n        const xAxisGrid = d3.axisBottom(x).tickSize(-INNER_HEIGHT).ticks(xDomain);\r\n        const yAxisGrid = d3.axisLeft(y).tickSize(-INNER_WIDTH).ticks(yDomain);   \r\n  \r\n        const showTooltip = (positionX: number, positionY: number, label: string, value: number) => {\r\n          tooltip\r\n            .text(label + \": \" + value)\r\n            .style(\"opacity\", 1)\r\n            .style(\"visibility\", \"visible\")\r\n            .style(\"top\", (positionY-10)+\"px\") \r\n            .style(\"left\",(positionX+10)+\"px\");\r\n        }\r\n\r\n        const hideTooltip = () => {\r\n          tooltip\r\n            .transition()\r\n            .duration(1000)\r\n            .style(\"opacity\", 0);\r\n        }\r\n\r\n        svg.selectAll(\"*\").remove();\r\n\r\n        const tooltip = d3.select(\"#tooltip\");\r\n        \r\n        svg.attr('height', height - 50)\r\n          .attr('width', width);\r\n\r\n        svg.append('image')\r\n          .attr('xlink:href', imageFile?.file)\r\n          .attr('height', INNER_HEIGHT)\r\n          .attr('width', INNER_WIDTH)\r\n          .attr('x', margin.right)\r\n          .attr('y', 0);\r\n\r\n        const xAxis = svg.append('g')\r\n          .attr('class', 'x axis-grid')\r\n          .attr('transform', 'translate(50,' + INNER_HEIGHT + ')')\r\n          .style(\"color\", props.config.grid.color)\r\n          .call(xAxisGrid);\r\n          \r\n        xAxis.selectAll('text')\r\n            .style('text-anchor', 'end')\r\n            .attr(\"dx\", \"1.5em\")\r\n            .attr(\"dy\", \".15em\")\r\n            .attr(\"transform\", \"rotate(90)\");\r\n\r\n        xAxis.selectAll('line')\r\n          .on(\"mouseover\", function(event: MouseEvent, xValue:any) {\r\n            showTooltip(event.pageX, event.pageY, 'X', xValue);\r\n          })\r\n          .on(\"mouseout\", function(event: MouseEvent) {\r\n            hideTooltip();\r\n          }) \r\n          .style('opacity', props.config.grid.opacity);\r\n\r\n      const yAxis =svg.append('g')\r\n          .attr('class', 'y axis-grid')\r\n          .attr('transform', 'translate(' + margin.left + ', 0)')\r\n          .style(\"color\", props.config.grid.color)\r\n          .call(yAxisGrid)\r\n          .selectAll(\"line\")\r\n          .on(\"mouseover\", function(event: MouseEvent, yValue:any) {\r\n            showTooltip(event.pageX, event.pageY, 'Y', yValue);\r\n          })\r\n          .on(\"mouseout\", function(event: MouseEvent) {\r\n            hideTooltip();\r\n          }) \r\n          .style('opacity', props.config.grid.opacity);\r\n\r\n      yAxis.selectAll(\"text\")\r\n            .style(\"text-anchor\", \"end\");   \r\n      \r\n      },\r\n      [props]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <svg ref={ref}>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid","import React, { useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport const useD3 = (renderChartFn: (arg0: any) => void, dependencies: React.DependencyList | undefined) => {\r\n    const ref = useRef<any>();\r\n\r\n    React.useEffect(() => {\r\n        renderChartFn(d3.select(ref.current));\r\n        return () => {};\r\n      }, dependencies);\r\n    return ref;\r\n}","import React, { ChangeEvent } from 'react'\r\nimport './ControlPanel.scss'\r\n\r\nconst ControlPanel = (props: any) => {\r\n\r\n    const onChangePixels = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let config = Object.assign({}, props.config);\r\n        config.grid.pixels = parseInt(event.target.value);\r\n        props.updateConfig(config);\r\n    }\r\n\r\n    const onChangeOpacity = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let config = Object.assign({}, props.config);\r\n        config.grid.opacity = parseFloat(event.target.value);\r\n        props.updateConfig(config);\r\n    }\r\n\r\n    const onChangeColor = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        let config = Object.assign({}, props.config);\r\n        config.grid.color = event.target.value;\r\n        props.updateConfig(config);\r\n    }\r\n\r\n    return (\r\n        <div className=\"control-panel\">\r\n            <label htmlFor=\"pixels\">Pixels</label>\r\n            <input type=\"number\" id=\"pixels\" name=\"pixels\" value={props.config.grid.pixels} min=\"1\" max=\"100\" onChange={onChangePixels}/>\r\n            <label htmlFor=\"opacity\">Opacity</label>\r\n            <input type=\"number\" id=\"opacity\" name=\"opacity\" value={props.config.grid.opacity} min=\"0\" max=\"1\" step=\"0.1\" onChange={onChangeOpacity}/>\r\n            <label htmlFor=\"color\">Color</label>\r\n            <select name=\"color\" id=\"color\" value={props.config.grid.color} onChange={onChangeColor}>\r\n                <option value=\"#000000\">Black</option>\r\n                <option value=\"#ffffff\">White</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ControlPanel\r\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport Header from './components/header/Header'\nimport FileChooser from './components/file-chooser/FileChooser';\nimport { ImageFile, ImageFileContext } from './context/file/FileContext';\nimport Grid from './components/grid/Grid';\nimport ControlPanel from './components/control-panel/ControlPanel';\n\nfunction App() {\n\n  const [imageFile, setImageFile] = React.useState<ImageFile>({file: undefined, loaded: false, height: 0, width: 0});\n\n  const [config, setConfig] = useState({grid: {\n    width: imageFile.width,\n    height: imageFile.height,\n    pixels: 20,\n    opacity: 0.5,\n    color: '#000000'\n  }});\n\n  const updateConfig = (value: any) => {\n    setConfig({...value})\n  }\n\n  return (\n    <div className=\"App\">\n      <Header title=\"Picasso's Grid\"></Header>\n      <ImageFileContext.Provider value={{imageFile, setImageFile}}>\n        <section>\n          {imageFile.loaded && <Grid config={config} updateConfig={updateConfig}></Grid>}\n          <ControlPanel config={config} updateConfig={updateConfig}></ControlPanel>\n          <FileChooser config={config} setConfig={setConfig}></FileChooser>\n        </section>\n      </ImageFileContext.Provider>\n      <div id=\"tooltip\" className=\"tooltip\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}